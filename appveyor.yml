# https://www.appveyor.com/docs/build-environment/#build-worker-images
image: Visual Studio 2017

build: false

environment:
  debug_artifacts: '_debug'
  APPVEYOR_RDP_PASSWORD: 'Password123'

test_script:
  - ps: |

      # RDP access
      $ip = (Get-NetIPAddress -AddressFamily IPv4 | Where-Object {$_.InterfaceAlias -like 'ethernet*'}).IPAddress
      $port = 3389
      # get password or generate
      $password = ''
      if($env:appveyor_rdp_password) {
          # take from environment variable
          $password = $env:appveyor_rdp_password

          # change password
          $objUser = [ADSI]("WinNT://$($env:computername)/appveyor")
          $objUser.SetPassword($password)
          [Microsoft.Win32.Registry]::SetValue("HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Winlogon", "DefaultPassword", $password)
          Write-Host "Password:"
          Write-Host "'$password'"
          Write-Host "fqun"
          Write-Host "'$($env:computername)/appveyor'"
      }

      if($ip.StartsWith('172.24.')) {
          $port = 33800 + ($ip.split('.')[2] - 16) * 256 + $ip.split('.')[3]
      } elseif ($ip.StartsWith('192.168.') -or $ip.StartsWith('10.240.')) {
          # new environment - behind NAT
          $port = 33800 + ($ip.split('.')[2] - 0) * 256 + $ip.split('.')[3]
      }

      # allow RDP on firewall
      Enable-NetFirewallRule -DisplayName 'Remote Desktop - User Mode (TCP-in)'

      Write-Host "Remote Desktop connection details:" -ForegroundColor Yellow
      Write-Host "  Server: $ip`:$port" -ForegroundColor Gray
      Write-Host "  Username: appveyor" -ForegroundColor Gray
      if(-not $env:appveyor_rdp_password) {
          Write-Host "  Password: $password" -ForegroundColor Gray
      }


      "PSVersionTable:"
      $PSVersionTable
      "`n"
      "PSModulePath:"
      $ENV:PSModulePath -split ';'
      "`n"
      "OS:"
      Get-WMIObject win32_operatingsystem | Select Caption, Version

      $Depth = 2
      $null = mkdir "$ENV:debug_artifacts" -Force

      Get-Variable | Export-CliXml -Path "$ENV:debug_artifacts\Variables.xml" -Depth $Depth
      Get-Module | Export-CliXml -Path "$ENV:debug_artifacts\LoadedModules.xml" -Depth $Depth
      Get-Module -ListAvailable | Export-CliXml -Path "$ENV:debug_artifacts\AllModules.xml" -Depth $Depth
      Get-ChildItem "ENV:" | Export-CliXml -Path "$ENV:debug_artifacts\Env.xml" -Depth $Depth
      Get-PackageProvider | Export-CliXml -Path "$ENV:debug_artifacts\PackageProvider.xml" -Depth $Depth
      Get-PackageSource | Export-CliXml -Path "$ENV:debug_artifacts\PackageSource.xml" -Depth $Depth
      "Done gathering data"

artifacts:
  - path: "$(debug_artifacts)"
    name: "debug artifacts"
    type: Zip